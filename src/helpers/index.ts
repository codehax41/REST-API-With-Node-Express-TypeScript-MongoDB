import crypto from 'crypto';

const SECRET = "RAM-REST-API"
//creates an HMAC (Hash-based Message Authentication Code) object using the SHA-256 
// hashing algorithm. The salt and password are combined with a '/' separator and used as the key for the HMAC
export const authentication = (salt: string, password: string) => {
    return crypto.createHmac('sha256', [salt, password].join('/')).update(SECRET).digest('hex');
}

// performing authentication using cryptographic operations
export const random = () => crypto.randomBytes(128).toString('base64'); // generates 128 random bytes using a cryptographic pseudorandom number generator, converts the generated bytes into a base64-encoded string.

//Note:
//.update(SECRET) updates the HMAC with the SECRET key.
//.digest('hex') generates the HMAC's hash as a hexadecimal string.